name: Rust CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust_sqlite_cli 
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          profile: minimal
          components: clippy, rustfmt
          override: true

    - name: Build Release
      run: cargo build --release

    - name: Format code
      run: cargo fmt --all -- --check

    - name: Lint code
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: cargo test

    - name: Upload optimized Rust binary as artifact
      uses: actions/upload-artifact@v2
      with:
        name: rust-binary-artifact
        path: target/release/your_binary_name  # Replace 'your_binary_name' with the name of your binary
  
